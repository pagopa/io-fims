openapi: 3.0.0
info:
  version: 1.0.0
  title: IO OpenID Provider

servers:
  - url: https://auth.io.pagopa.it
    description: Production server
  - url: http://localhost:{port}
    description: Local development
    variables:
      port:
        default: "3000"

paths:
  /authorize:
    get:
      operationId: authenticationRequest
      tags:
        - OIDC
      parameters:
        - in: query
          name: client_id
          schema:
            type: string
            format: ulid
          required: true
        - in: query
          name: response_type
          schema:
            type: string
            enum: ["code"]
          required: true
        - in: query
          name: scope
          schema:
            type: string
            enum: ["openid profile lollipop"]
          required: true
        - in: query
          name: redirect
          schema:
            type: string
            format: uri
          required: true
        - in: query
          name: state
          schema:
            type: string
          required: false
        - in: query
          name: nonce
          schema:
            type: string
          required: false
      responses:
        302:
          description: Found
          headers:
            Location:
              schema:
                type: string
                format: uri
        303:
          description: See other
          headers:
            Location:
              schema:
                type: string
                format: uri
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OIDCError"

  /interaction/{id}:
    get:
      operationId: getInteraction
      tags:
        - Interaction
      security:
        - fimsToken: []
      parameters:
        - $ref: "#/components/parameters/interactionId"
        - $ref: "#/components/parameters/interactionCookie"
        - in: header
          name: Accept-Language
          schema:
            type: string
      responses:
        200:
          description: Interaction detail
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Consent"
        400:
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        500:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemJson"

  /interaction/{id}/abort:
    post:
      operationId: abortInteraction
      summary: Abort interaction
      tags:
        - Interaction
      security:
        - fimsToken: []
      parameters:
        - $ref: "#/components/parameters/interactionId"
        - $ref: "#/components/parameters/interactionCookie"
      responses:
        302:
          description: Found
          headers:
            Location:
              schema:
                type: string
                format: uri
        303:
          description: See other
          headers:
            Location:
              schema:
                type: string
                format: uri
        400:
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        500:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemJson"

  /interaction/{id}/consent:
    post:
      operationId: giveConsent
      summary: Give consent
      tags:
        - Interaction
      security:
        - fimsToken: []
      parameters:
        - $ref: "#/components/parameters/interactionId"
        - $ref: "#/components/parameters/interactionCookie"
      responses:
        303:
          description: See other
          headers:
            Location:
              schema:
                type: string
                format: url
        400:
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        500:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemJson"

  /health:
    get:
      operationId: health
      summary: Health
      tags:
        - Health
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Health"
                  - maxItems: 0
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Health"

components:
  securitySchemes:
    fimsToken:
      type: apiKey
      in: cookie
      name: _io_fims_token

  parameters:
    interactionId:
      name: id
      in: path
      required: true
      schema:
        type: string

    interactionCookie:
      name: interaction
      in: cookie
      required: true
      schema:
        type: string

  schemas:
    Link:
      type: object
      properties:
        href:
          type: string
      required:
        - href

    Claim:
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
      required:
        - name
        - display_name

    Consent:
      type: object
      properties:
        _links:
          type: object
          properties:
            abort:
              $ref: "#/components/schemas/Link"
            consent:
              $ref: "#/components/schemas/Link"
          required:
            - consent
            - abort
        service_id:
          type: string
          format: ulid

        redirect:
          type: object
          properties:
            display_name:
              type: string
          required:
            - display_name

        type:
          type: string
          enum: ["consent"]

        user_metadata:
          type: array
          items:
            $ref: "#/components/schemas/Claim"
      required:
        - _links
        - service_id
        - redirect
        - type
        - user_metadata

    Health:
      type: array
      items:
        type: string

    ProblemJson:
      type: object
      properties:
        detail:
          type: string
        title:
          type: string
        status:
          type: number
      required:
        - detail
        - status
        - title

    OIDCError:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
        state:
          type: string
      required:
        - error
